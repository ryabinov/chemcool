create table chemistry_element (
    element_id varchar(255) not null,
    element_transcription varchar(255),
    element_group int4,
    element_lat_name varchar(255),
    element_molar_mass float8,
    element_name varchar(255),
    element_number int4,
    element_oxidation_value varchar(255),
    element_period varchar(255),
    element_subgroup varchar(255),
    element_symbol varchar(255),
    element_valence varchar(255),
    primary key (element_id)
);

create table chemistry_equations (
    task_id varchar(255) not null,
    chapter_id int4,
    description varchar(10000),
    reference_id int4,
    right_answer varchar(255),
    primary key (task_id)
);

create table chemistry_equations_event (
    event_id varchar(255) not null,
    event_author_id varchar(255),
    event_entity_id varchar(255),
    event_occuring_comtext varchar(255),
    event_occuring_context_time timestamp,
    event_payload jsonb,
    event_type int4,
    event_version varchar(255),
    primary key (event_id)
);

create table if not exists chemistry_fixed_answer_task (
    task_id varchar(255) not null primary key,
    description VARCHAR(10000),
    right_answer VARCHAR(255),
    chapter_id int,
    reference_id int
);

create table if not exists chemistry_fixed_answer_task_event (
    event_uuid VARCHAR(255) not null primary key,
    event_author_id VARCHAR(255) not null,
    event_occuring_context VARCHAR(255) not null,
    event_occuring_context_time TIMESTAMP not null,
    event_type VARCHAR(255) not null,
    event_version VARCHAR(255),
    event_entity_id VARCHAR(255),
    event_payload jsonb not null

);

CREATE TABLE chemistry_matching_task
(
    task_id      character varying(255) NOT NULL,
    chapter_id   integer,
    description  character varying(10000),
    reference_id integer
);

CREATE TABLE chemistry_matching_task_event
(
    chemistry_matching_task_event_id                     character varying(255) NOT NULL,
    chemistry_matching_task_event_author_id              character varying(255),
    chemistry_matching_task_event_entity_id              character varying(255),
    chemistry_matching_task_event_occurring_context      character varying(255),
    chemistry_matching_task_event_occurring_context_time timestamp without time zone,
    chemistry_matching_task_event_payload                jsonb,
    chemistry_matching_task_event_type                   character varying(255),
    version                                              character varying(255)
);

CREATE TABLE couples_for_matching
(
    couple_id    bigint generated by default as identity not null primary key,
    left_couple  character varying(255),
    right_couple character varying(255),
    task_id      character varying(255)
);

ALTER TABLE ONLY chemistry_matching_task_event
    ADD CONSTRAINT chemistry_matching_task_event_pkey PRIMARY KEY (chemistry_matching_task_event_id);

ALTER TABLE ONLY chemistry_matching_task
    ADD CONSTRAINT chemistry_matching_task_pkey PRIMARY KEY (task_id);

ALTER TABLE ONLY couples_for_matching
    ADD CONSTRAINT fkqrg9epawfu7v3uju9daokxa08 FOREIGN KEY (task_id) REFERENCES chemistry_matching_task (task_id);

create table if not exists chemistry_single_select_task
(
    id                     varchar(255) not null
        constraint chemistry_single_select_task_pkey
            primary key,
    chapter_id             integer,
    correct_answer         varchar(255),
    description            varchar(10000),
    incorrect_answer_one   varchar(255),
    incorrect_answer_two   varchar(255),
    incorrect_answer_three varchar(255),
    incorrect_answer_four  varchar(255),
    reference_id           integer
);

create table chemistry_single_select_task_event
(
    id                    varchar(255) not null
        constraint chemistry_single_select_task_event_pkey
            primary key,
    author_id             varchar(255),
    entity_id             varchar(255),
    event_type            integer,
    event_version         varchar(255),
    occuring_context      varchar(255),
    occuring_context_time timestamp,
    payload               jsonb
);

-- TEST
