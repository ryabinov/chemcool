version: '3'

services:

  service-discovery:
    image: service-discovery
    container_name: service-discovery
    hostname: service-discovery
    build:
      context: ../../api-gateway/service-discovery
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=test-hosts
    ports:
      - 8761:8761

  web-api-gateway:
    image: web-api-gateway
    container_name: web-api-gateway
    hostname: web-api-gateway
    build:
      context: ../../api-gateway/web-api-gateway/web-api-gateway-application
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=test-hosts
      - SPRING_CLOUD_CONFIG_USERNAME=config-service-user
      - SPRING_CLOUD_CONFIG_PASSWORD=123
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka
    links:
      - service-discovery
    depends_on:
      - config-service
    ports:
      - 8080:8080

  config-service:
    image: config-service
    container_name: config-service
    build:
      context: ../../configuration/config-service
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=native, test-hosts
    volumes:
      - ../../configuration/config-repo:/opt/config-repo
    links:
      - service-discovery
    depends_on:
      - service-discovery
    ports:
      - 8888:8888


  postgres:
    image: postgres
    restart: always
    container_name: postgres
    ports:
      - 5432:5432
    volumes:
      - ../../security-package/deployment/scripts/role.sql:/docker-entrypoint-initdb.d/init_a_role.sql
      - ../../security-package/deployment/scripts/theory-application.sql:/docker-entrypoint-initdb.d/init_theory_application.sql
      - ../../security-package/deployment/scripts/chemsingleselect.sql:/docker-entrypoint-initdb.d/init_chemsingleselect.sql
      - ../../security-package/deployment/scripts/chemfixedanswer.sql:/docker-entrypoint-initdb.d/init_chemfixedanswer.sql
      - ../../security-package/deployment/scripts/chemmatches.sql:/docker-entrypoint-initdb.d/init_chemmatches.sql
    environment:
      POSTGRES_PASSWORD: postgres

  manager:
    image: 'sheepkiller/kafka-manager'
    container_name: manager-kafka
    ports:
      - '9000:9000'
    environment:
      - ZK_HOSTS=zookeeper:2181
    depends_on:
      - zookeeper

  zookeeper:
    image: wurstmeister/zookeeper
    expose:
      - "2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    links:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka

